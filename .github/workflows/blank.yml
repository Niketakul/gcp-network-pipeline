[10:58 PM, 1/11/2025] Niketa: name: 'Terraform'

on:
  workflow_dispatch:
  pull_request:

permissions:
  contents: read
  id-token: 'write'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
    
    steps:
# checkout repository to github action runner
    - name: Checkout
      uses: actions/checkout@v3

    - id: auth
      uses: google-github-actions/auth@v2.0.0
      with:
        workload_identity_provider: 'projects/624433382152/locations/global/workloadIdentityPools/github-demo-pool-niketa/providers/github'
        service_account: 'github-actions-workload-federa@niketa.iam.gserviceaccount.com'

    - name: Terraform Init
      run: |
        terraform init

     # Terraform Validate
    - name: Terraform Validate
      run: |
        terraform validate

    # Terraform Plan
    - name: Terraform Plan
      run: |
        terraform plan -input=false
      
    - name: Wiz.io Security Scan
      env:
        WIZ_API_KEY: ${{ secrets.WIZ_API_KEY }}  # Store Wiz.io API Key as a secret
      run: |
        curl -sSL https://download.wiz.io/cli | sudo bash
        wiz scan terraform -d . --format json > wiz_scan_report.json
        cat wiz_scan_report.json  # Print the scan results to the log (optional)

   # Terraform Apply
    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false
[10:58 PM, 1/11/2025] Niketa: name: Terraform Lint
on:
 push:
   branches:
     - main
 pull_request:
jobs:
 lint:
   name: Run Terraform Lint
   runs-on: ubuntu-latest
   steps:
     - name: Checkout code
       uses: actions/checkout@v3
     - name: Set up Terraform
       uses: hashicorp/setup-terraform@v2
       with:
         terraform_version: 'latest'
     - name: Install tflint
       run: |
         curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh| bash
     - name: Run tflint
       run: tflint
[10:58 PM, 1/11/2025] Niketa: name: Create resource using terraform

on: 
  push:
    branches:
  workflow_dispatch:

jobs:
  tflint-checks:
    runs-on: ubuntu-latest
    steps: 
      # Checkout Repository
    - name: Checkout Git Repository
      uses: actions/checkout@v3

    - name: Cache plugin dir
      uses: actions/cache@v2
      with:
        path: ~/.tflint.d/plugins
        key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

    - name: setup TFLint
      uses: terraform-linters/setup-tflint@v2
      with:
        github_token: ${{ secrets.CI_GITHUB_TOKEN }}

    - name: Show version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init

    - name: Run TFlint
      run: tflint -f compact --recursive --force

  tfsec-checks:
